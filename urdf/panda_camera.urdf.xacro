<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="panda">
  <!-- Panda Arm + Hand -->
  <xacro:include filename="$(find franka_description)/robots/panda_arm_hand.urdf.xacro"/>

  <!-- Crank up the friction -->
  <gazebo reference="panda_leftfinger">
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
  </gazebo>

  <gazebo reference="panda_rightfinger">
    <mu1>100.0</mu1>
    <mu2>100.0</mu2>
  </gazebo>

  <!-- Camera origin relative to panda_link0 -->
  <xacro:property name="M_PI" value="3.1415926535897931" />

  <!-- camera for the cylinder -->
  <!-- <xacro:property name="cam_px" value="0.0" />
  <xacro:property name="cam_py" value="-0.25" />
  <xacro:property name="cam_pz" value="0.04" />
  <xacro:property name="cam_or" value="0.0" />
  <xacro:property name="cam_op" value="0.0" />
  <xacro:property name="cam_oy" value="0.0" /> -->

  <!-- overhead position -->
  <xacro:property name="cam_px" value="0.5" />
  <xacro:property name="cam_py" value="0.0" />
  <xacro:property name="cam_pz" value="0.7" />
  <xacro:property name="cam_or" value="0.0" />
  <xacro:property name="cam_op" value="${M_PI/2.0}" />
  <xacro:property name="cam_oy" value="0.0" />


  <link name="camera_link">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
        <geometry>
         <mesh filename="package://gqcnn_demo/meshes/kinect.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="0.07271 0.27794 0.073"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.564" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <joint name="camera_joint" type="fixed">
      <origin xyz="${cam_px} ${cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
      <parent link="panda_link0"/>
      <child link="camera_link" />
    </joint>


  <link name="camera_optical_link"/>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
    <parent link="camera_link" />
    <child link="camera_optical_link" />
  </joint>

  <gazebo reference="camera_link">
    <sensor type="depth" name="camera">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <camera>
        <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <cameraName>camera</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>10</updateRate>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <frameName>camera_optical_link</frameName>
        <baseline>0.1</baseline>
        <distortion_k1>0.0</distortion_k1>
        <distortion_k2>0.0</distortion_k2>
        <distortion_k3>0.0</distortion_k3>
        <distortion_t1>0.0</distortion_t1>
        <distortion_t2>0.0</distortion_t2>
        <pointCloudCutoff>0.4</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
</robot>
